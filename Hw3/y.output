Nonterminals useless in grammar

    ForClause
    PostStmt


Terminals unused in grammar

    COMMA
    QUOTA
    RETURN
    CONTINUE
    BREAK
    VOID
    BOOL_LIT


Rules useless in grammar

  103 ForClause: InitStmt SEMICOLON Condition SEMICOLON PostStmt

  104 PostStmt: SimpleExpr


State 19 conflicts: 3 shift/reduce
State 24 conflicts: 1 shift/reduce
State 25 conflicts: 6 shift/reduce
State 26 conflicts: 2 shift/reduce
State 27 conflicts: 3 shift/reduce
State 97 conflicts: 19 shift/reduce
State 112 conflicts: 1 shift/reduce
State 113 conflicts: 6 shift/reduce
State 114 conflicts: 2 shift/reduce
State 115 conflicts: 3 shift/reduce
State 119 conflicts: 1 shift/reduce
State 133 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: StatementList

    2 Type: TypeName

    3 TypeName: INT
    4         | FLOAT
    5         | STRING
    6         | BOOL

    7 Expression: Expression OR Expr7
    8           | Expr7

    9 Expr7: Expr7 AND Expr6
   10      | Expr6

   11 Expr6: Expr6 cmp_op Expr5
   12      | Expr5

   13 Expr5: Expr5 add_op Expr4
   14      | Expr4

   15 Expr4: Expr4 mul_op UnaryExpr
   16      | UnaryExpr

   17 UnaryExpr: PrimaryExpr
   18          | unary_op UnaryExpr

   19 PrimaryExpr: Operand
   20            | IndexExpr
   21            | ConversionExpr

   22 Operand: Literal
   23        | IDENT
   24        | LPAREN Expression RPAREN

   25 Literal: INT_LIT
   26        | FLOAT_LIT
   27        | STRING_LIT
   28        | TRUE
   29        | FALSE

   30 LId: IDENT

   31 IndexExpr: LId LBRACK Expression RBRACK

   32 LIndexExpr: LId LBRACK Operand RBRACK

   33 ConversionExpr: LPAREN Type RPAREN Expression

   34 cmp_op: EQL
   35       | NEQ
   36       | LSS
   37       | LEQ
   38       | GTR
   39       | GEQ

   40 add_op: ADD
   41       | SUB

   42 mul_op: MUL
   43       | QUO
   44       | REM

   45 unary_op: ADD
   46         | SUB
   47         | NOT

   48 Statement: Statement Statement
   49          | ExpressionStmt
   50          | DeclarationStmt
   51          | AssignmentStmt
   52          | IncDecStmt
   53          | Block
   54          | IfStmt
   55          | WhileStmt
   56          | ForStmt
   57          | PrintStmt

   58 ExpressionStmt: Expression SEMICOLON

   59 DeclarationStmt: Type IDENT SEMICOLON
   60                | Type IDENT ASSIGN Expression SEMICOLON
   61                | Type IDENT LBRACK Expression RBRACK SEMICOLON

   62 AssignmentStmt: AssignmentExpr SEMICOLON

   63 AssignmentExpr: Literal assign_op Expression
   64               | IDENT ASSIGN Expression
   65               | LId assign_op Expression
   66               | LIndexExpr assign_op Expression
   67               | ConversionExpr assign_op Expression

   68 assign_op: ASSIGN
   69          | ADD_ASSIGN
   70          | SUB_ASSIGN
   71          | MUL_ASSIGN
   72          | QUO_ASSIGN
   73          | REM_ASSIGN

   74 IncDecStmt: IncDecExpr SEMICOLON

   75 IncDecExpr: IDENT INC
   76           | IDENT DEC
   77           | Expression INC
   78           | Expression DEC

   79 Block: Lbrace StatementList Rbrace

   80 Lbrace: LBRACE

   81 Rbrace: RBRACE

   82 StatementList: Statement

   83 If: IF

   84 IfStmt: If LPAREN Condition Rparen Block
   85       | If LPAREN Condition Rparen Block Else IfStmt
   86       | If LPAREN Condition Rparen Block Else Block

   87 Condition: Expression

   88 Else: ELSE

   89 Rparen: RPAREN

   90 While: WHILE

   91 WhileStmt: While LPAREN Condition Rparen Block

   92 For: FOR

   93 LSemicolon: SEMICOLON

   94 RSemicolon: SEMICOLON

   95 IncDec: INC
   96       | DEC

   97 ForStmt: For LPAREN InitStmt LSemicolon Condition RSemicolon IDENT IncDec RPAREN Block

   98 InitStmt: SimpleExpr

   99 SimpleExpr: AssignmentExpr
  100           | Expression
  101           | IncDecExpr

  102 PrintStmt: PRINT LPAREN Expression RPAREN SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ADD (258) 40 45
    SUB (259) 41 46
    MUL (260) 42
    QUO (261) 43
    REM (262) 44
    INC (263) 75 77 95
    DEC (264) 76 78 96
    GTR (265) 38
    LSS (266) 36
    GEQ (267) 39
    LEQ (268) 37
    EQL (269) 34
    NEQ (270) 35
    ASSIGN (271) 60 64 68
    ADD_ASSIGN (272) 69
    SUB_ASSIGN (273) 70
    MUL_ASSIGN (274) 71
    QUO_ASSIGN (275) 72
    REM_ASSIGN (276) 73
    AND (277) 9
    OR (278) 7
    NOT (279) 47
    LPAREN (280) 24 33 84 85 86 91 97 102
    RPAREN (281) 24 33 89 97 102
    LBRACK (282) 31 32 61
    RBRACK (283) 31 32 61
    LBRACE (284) 80
    RBRACE (285) 81
    SEMICOLON (286) 58 59 60 61 62 74 93 94 102
    COMMA (287)
    QUOTA (288)
    PRINT (289) 102
    RETURN (290)
    IF (291) 83
    ELSE (292) 88
    FOR (293) 92
    WHILE (294) 90
    INT (295) 3
    FLOAT (296) 4
    BOOL (297) 6
    STRING (298) 5
    TRUE (299) 28
    FALSE (300) 29
    CONTINUE (301)
    BREAK (302)
    VOID (303)
    INT_LIT <i_val> (304) 25
    FLOAT_LIT <f_val> (305) 26
    STRING_LIT <s_val> (306) 27
    BOOL_LIT <s_val> (307)
    IDENT <s_val> (308) 23 30 59 60 61 64 75 76 97


Nonterminals, with rules where they appear

    $accept (54)
        on left: 0
    Program (55)
        on left: 1
        on right: 0
    Type <s_val> (56)
        on left: 2
        on right: 33 59 60 61
    TypeName <s_val> (57)
        on left: 3 4 5 6
        on right: 2
    Expression <s_val> (58)
        on left: 7 8
        on right: 7 24 31 33 58 60 61 63 64 65 66 67 77 78 87 100 102
    Expr7 <s_val> (59)
        on left: 9 10
        on right: 7 8 9
    Expr6 <s_val> (60)
        on left: 11 12
        on right: 9 10 11
    Expr5 <s_val> (61)
        on left: 13 14
        on right: 11 12 13
    Expr4 <s_val> (62)
        on left: 15 16
        on right: 13 14 15
    UnaryExpr <s_val> (63)
        on left: 17 18
        on right: 15 16 18
    PrimaryExpr <s_val> (64)
        on left: 19 20 21
        on right: 17
    Operand <s_val> (65)
        on left: 22 23 24
        on right: 19 32
    Literal <s_val> (66)
        on left: 25 26 27 28 29
        on right: 22 63
    LId <s_val> (67)
        on left: 30
        on right: 31 32 65
    IndexExpr <s_val> (68)
        on left: 31
        on right: 20
    LIndexExpr <s_val> (69)
        on left: 32
        on right: 66
    ConversionExpr <s_val> (70)
        on left: 33
        on right: 21 67
    cmp_op <s_val> (71)
        on left: 34 35 36 37 38 39
        on right: 11
    add_op <s_val> (72)
        on left: 40 41
        on right: 13
    mul_op <s_val> (73)
        on left: 42 43 44
        on right: 15
    unary_op <s_val> (74)
        on left: 45 46 47
        on right: 18
    Statement (75)
        on left: 48 49 50 51 52 53 54 55 56 57
        on right: 48 82
    ExpressionStmt (76)
        on left: 58
        on right: 49
    DeclarationStmt (77)
        on left: 59 60 61
        on right: 50
    AssignmentStmt (78)
        on left: 62
        on right: 51
    AssignmentExpr (79)
        on left: 63 64 65 66 67
        on right: 62 99
    assign_op <s_val> (80)
        on left: 68 69 70 71 72 73
        on right: 63 65 66 67
    IncDecStmt (81)
        on left: 74
        on right: 52
    IncDecExpr (82)
        on left: 75 76 77 78
        on right: 74 101
    Block (83)
        on left: 79
        on right: 53 84 85 86 91 97
    Lbrace (84)
        on left: 80
        on right: 79
    Rbrace (85)
        on left: 81
        on right: 79
    StatementList (86)
        on left: 82
        on right: 1 79
    If (87)
        on left: 83
        on right: 84 85 86
    IfStmt (88)
        on left: 84 85 86
        on right: 54 85
    Condition (89)
        on left: 87
        on right: 84 85 86 91 97
    Else (90)
        on left: 88
        on right: 85 86
    Rparen (91)
        on left: 89
        on right: 84 85 86 91
    While (92)
        on left: 90
        on right: 91
    WhileStmt (93)
        on left: 91
        on right: 55
    For (94)
        on left: 92
        on right: 97
    LSemicolon (95)
        on left: 93
        on right: 97
    RSemicolon (96)
        on left: 94
        on right: 97
    IncDec <s_val> (97)
        on left: 95 96
        on right: 97
    ForStmt (98)
        on left: 97
        on right: 56
    InitStmt (99)
        on left: 98
        on right: 97
    SimpleExpr (100)
        on left: 99 100 101
        on right: 98
    PrintStmt (101)
        on left: 102
        on right: 57


State 0

    0 $accept: . Program $end

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACE      shift, and go to state 5
    PRINT       shift, and go to state 6
    IF          shift, and go to state 7
    FOR         shift, and go to state 8
    WHILE       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    BOOL        shift, and go to state 12
    STRING      shift, and go to state 13
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 19

    Program          go to state 20
    Type             go to state 21
    TypeName         go to state 22
    Expression       go to state 23
    Expr7            go to state 24
    Expr6            go to state 25
    Expr5            go to state 26
    Expr4            go to state 27
    UnaryExpr        go to state 28
    PrimaryExpr      go to state 29
    Operand          go to state 30
    Literal          go to state 31
    LId              go to state 32
    IndexExpr        go to state 33
    LIndexExpr       go to state 34
    ConversionExpr   go to state 35
    unary_op         go to state 36
    Statement        go to state 37
    ExpressionStmt   go to state 38
    DeclarationStmt  go to state 39
    AssignmentStmt   go to state 40
    AssignmentExpr   go to state 41
    IncDecStmt       go to state 42
    IncDecExpr       go to state 43
    Block            go to state 44
    Lbrace           go to state 45
    StatementList    go to state 46
    If               go to state 47
    IfStmt           go to state 48
    While            go to state 49
    WhileStmt        go to state 50
    For              go to state 51
    ForStmt          go to state 52
    PrintStmt        go to state 53


State 1

   45 unary_op: ADD .

    $default  reduce using rule 45 (unary_op)


State 2

   46 unary_op: SUB .

    $default  reduce using rule 46 (unary_op)


State 3

   47 unary_op: NOT .

    $default  reduce using rule 47 (unary_op)


State 4

   24 Operand: LPAREN . Expression RPAREN
   33 ConversionExpr: LPAREN . Type RPAREN Expression

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    BOOL        shift, and go to state 12
    STRING      shift, and go to state 13
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 54

    Type            go to state 55
    TypeName        go to state 22
    Expression      go to state 56
    Expr7           go to state 24
    Expr6           go to state 25
    Expr5           go to state 26
    Expr4           go to state 27
    UnaryExpr       go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 57
    LId             go to state 58
    IndexExpr       go to state 33
    ConversionExpr  go to state 59
    unary_op        go to state 36


State 5

   80 Lbrace: LBRACE .

    $default  reduce using rule 80 (Lbrace)


State 6

  102 PrintStmt: PRINT . LPAREN Expression RPAREN SEMICOLON

    LPAREN  shift, and go to state 60


State 7

   83 If: IF .

    $default  reduce using rule 83 (If)


State 8

   92 For: FOR .

    $default  reduce using rule 92 (For)


State 9

   90 While: WHILE .

    $default  reduce using rule 90 (While)


State 10

    3 TypeName: INT .

    $default  reduce using rule 3 (TypeName)


State 11

    4 TypeName: FLOAT .

    $default  reduce using rule 4 (TypeName)


State 12

    6 TypeName: BOOL .

    $default  reduce using rule 6 (TypeName)


State 13

    5 TypeName: STRING .

    $default  reduce using rule 5 (TypeName)


State 14

   28 Literal: TRUE .

    $default  reduce using rule 28 (Literal)


State 15

   29 Literal: FALSE .

    $default  reduce using rule 29 (Literal)


State 16

   25 Literal: INT_LIT .

    $default  reduce using rule 25 (Literal)


State 17

   26 Literal: FLOAT_LIT .

    $default  reduce using rule 26 (Literal)


State 18

   27 Literal: STRING_LIT .

    $default  reduce using rule 27 (Literal)


State 19

   23 Operand: IDENT .
   30 LId: IDENT .
   64 AssignmentExpr: IDENT . ASSIGN Expression
   75 IncDecExpr: IDENT . INC
   76           | IDENT . DEC

    INC     shift, and go to state 61
    DEC     shift, and go to state 62
    ASSIGN  shift, and go to state 63

    INC         [reduce using rule 23 (Operand)]
    DEC         [reduce using rule 23 (Operand)]
    ASSIGN      [reduce using rule 30 (LId)]
    ADD_ASSIGN  reduce using rule 30 (LId)
    SUB_ASSIGN  reduce using rule 30 (LId)
    MUL_ASSIGN  reduce using rule 30 (LId)
    QUO_ASSIGN  reduce using rule 30 (LId)
    REM_ASSIGN  reduce using rule 30 (LId)
    LBRACK      reduce using rule 30 (LId)
    $default    reduce using rule 23 (Operand)


State 20

    0 $accept: Program . $end

    $end  shift, and go to state 64


State 21

   59 DeclarationStmt: Type . IDENT SEMICOLON
   60                | Type . IDENT ASSIGN Expression SEMICOLON
   61                | Type . IDENT LBRACK Expression RBRACK SEMICOLON

    IDENT  shift, and go to state 65


State 22

    2 Type: TypeName .

    $default  reduce using rule 2 (Type)


State 23

    7 Expression: Expression . OR Expr7
   58 ExpressionStmt: Expression . SEMICOLON
   77 IncDecExpr: Expression . INC
   78           | Expression . DEC

    INC        shift, and go to state 66
    DEC        shift, and go to state 67
    OR         shift, and go to state 68
    SEMICOLON  shift, and go to state 69


State 24

    8 Expression: Expr7 .
    9 Expr7: Expr7 . AND Expr6

    AND  shift, and go to state 70

    AND       [reduce using rule 8 (Expression)]
    $default  reduce using rule 8 (Expression)


State 25

   10 Expr7: Expr6 .
   11 Expr6: Expr6 . cmp_op Expr5

    GTR  shift, and go to state 71
    LSS  shift, and go to state 72
    GEQ  shift, and go to state 73
    LEQ  shift, and go to state 74
    EQL  shift, and go to state 75
    NEQ  shift, and go to state 76

    GTR       [reduce using rule 10 (Expr7)]
    LSS       [reduce using rule 10 (Expr7)]
    GEQ       [reduce using rule 10 (Expr7)]
    LEQ       [reduce using rule 10 (Expr7)]
    EQL       [reduce using rule 10 (Expr7)]
    NEQ       [reduce using rule 10 (Expr7)]
    $default  reduce using rule 10 (Expr7)

    cmp_op  go to state 77


State 26

   12 Expr6: Expr5 .
   13 Expr5: Expr5 . add_op Expr4

    ADD  shift, and go to state 78
    SUB  shift, and go to state 79

    ADD       [reduce using rule 12 (Expr6)]
    SUB       [reduce using rule 12 (Expr6)]
    $default  reduce using rule 12 (Expr6)

    add_op  go to state 80


State 27

   14 Expr5: Expr4 .
   15 Expr4: Expr4 . mul_op UnaryExpr

    MUL  shift, and go to state 81
    QUO  shift, and go to state 82
    REM  shift, and go to state 83

    MUL       [reduce using rule 14 (Expr5)]
    QUO       [reduce using rule 14 (Expr5)]
    REM       [reduce using rule 14 (Expr5)]
    $default  reduce using rule 14 (Expr5)

    mul_op  go to state 84


State 28

   16 Expr4: UnaryExpr .

    $default  reduce using rule 16 (Expr4)


State 29

   17 UnaryExpr: PrimaryExpr .

    $default  reduce using rule 17 (UnaryExpr)


State 30

   19 PrimaryExpr: Operand .

    $default  reduce using rule 19 (PrimaryExpr)


State 31

   22 Operand: Literal .
   63 AssignmentExpr: Literal . assign_op Expression

    ASSIGN      shift, and go to state 85
    ADD_ASSIGN  shift, and go to state 86
    SUB_ASSIGN  shift, and go to state 87
    MUL_ASSIGN  shift, and go to state 88
    QUO_ASSIGN  shift, and go to state 89
    REM_ASSIGN  shift, and go to state 90

    $default  reduce using rule 22 (Operand)

    assign_op  go to state 91


State 32

   31 IndexExpr: LId . LBRACK Expression RBRACK
   32 LIndexExpr: LId . LBRACK Operand RBRACK
   65 AssignmentExpr: LId . assign_op Expression

    ASSIGN      shift, and go to state 85
    ADD_ASSIGN  shift, and go to state 86
    SUB_ASSIGN  shift, and go to state 87
    MUL_ASSIGN  shift, and go to state 88
    QUO_ASSIGN  shift, and go to state 89
    REM_ASSIGN  shift, and go to state 90
    LBRACK      shift, and go to state 92

    assign_op  go to state 93


State 33

   20 PrimaryExpr: IndexExpr .

    $default  reduce using rule 20 (PrimaryExpr)


State 34

   66 AssignmentExpr: LIndexExpr . assign_op Expression

    ASSIGN      shift, and go to state 85
    ADD_ASSIGN  shift, and go to state 86
    SUB_ASSIGN  shift, and go to state 87
    MUL_ASSIGN  shift, and go to state 88
    QUO_ASSIGN  shift, and go to state 89
    REM_ASSIGN  shift, and go to state 90

    assign_op  go to state 94


State 35

   21 PrimaryExpr: ConversionExpr .
   67 AssignmentExpr: ConversionExpr . assign_op Expression

    ASSIGN      shift, and go to state 85
    ADD_ASSIGN  shift, and go to state 86
    SUB_ASSIGN  shift, and go to state 87
    MUL_ASSIGN  shift, and go to state 88
    QUO_ASSIGN  shift, and go to state 89
    REM_ASSIGN  shift, and go to state 90

    $default  reduce using rule 21 (PrimaryExpr)

    assign_op  go to state 95


State 36

   18 UnaryExpr: unary_op . UnaryExpr

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 54

    UnaryExpr       go to state 96
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 57
    LId             go to state 58
    IndexExpr       go to state 33
    ConversionExpr  go to state 59
    unary_op        go to state 36


State 37

   48 Statement: Statement . Statement
   82 StatementList: Statement .

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACE      shift, and go to state 5
    PRINT       shift, and go to state 6
    IF          shift, and go to state 7
    FOR         shift, and go to state 8
    WHILE       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    BOOL        shift, and go to state 12
    STRING      shift, and go to state 13
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 19

    $default  reduce using rule 82 (StatementList)

    Type             go to state 21
    TypeName         go to state 22
    Expression       go to state 23
    Expr7            go to state 24
    Expr6            go to state 25
    Expr5            go to state 26
    Expr4            go to state 27
    UnaryExpr        go to state 28
    PrimaryExpr      go to state 29
    Operand          go to state 30
    Literal          go to state 31
    LId              go to state 32
    IndexExpr        go to state 33
    LIndexExpr       go to state 34
    ConversionExpr   go to state 35
    unary_op         go to state 36
    Statement        go to state 97
    ExpressionStmt   go to state 38
    DeclarationStmt  go to state 39
    AssignmentStmt   go to state 40
    AssignmentExpr   go to state 41
    IncDecStmt       go to state 42
    IncDecExpr       go to state 43
    Block            go to state 44
    Lbrace           go to state 45
    If               go to state 47
    IfStmt           go to state 48
    While            go to state 49
    WhileStmt        go to state 50
    For              go to state 51
    ForStmt          go to state 52
    PrintStmt        go to state 53


State 38

   49 Statement: ExpressionStmt .

    $default  reduce using rule 49 (Statement)


State 39

   50 Statement: DeclarationStmt .

    $default  reduce using rule 50 (Statement)


State 40

   51 Statement: AssignmentStmt .

    $default  reduce using rule 51 (Statement)


State 41

   62 AssignmentStmt: AssignmentExpr . SEMICOLON

    SEMICOLON  shift, and go to state 98


State 42

   52 Statement: IncDecStmt .

    $default  reduce using rule 52 (Statement)


State 43

   74 IncDecStmt: IncDecExpr . SEMICOLON

    SEMICOLON  shift, and go to state 99


State 44

   53 Statement: Block .

    $default  reduce using rule 53 (Statement)


State 45

   79 Block: Lbrace . StatementList Rbrace

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACE      shift, and go to state 5
    PRINT       shift, and go to state 6
    IF          shift, and go to state 7
    FOR         shift, and go to state 8
    WHILE       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    BOOL        shift, and go to state 12
    STRING      shift, and go to state 13
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 19

    Type             go to state 21
    TypeName         go to state 22
    Expression       go to state 23
    Expr7            go to state 24
    Expr6            go to state 25
    Expr5            go to state 26
    Expr4            go to state 27
    UnaryExpr        go to state 28
    PrimaryExpr      go to state 29
    Operand          go to state 30
    Literal          go to state 31
    LId              go to state 32
    IndexExpr        go to state 33
    LIndexExpr       go to state 34
    ConversionExpr   go to state 35
    unary_op         go to state 36
    Statement        go to state 37
    ExpressionStmt   go to state 38
    DeclarationStmt  go to state 39
    AssignmentStmt   go to state 40
    AssignmentExpr   go to state 41
    IncDecStmt       go to state 42
    IncDecExpr       go to state 43
    Block            go to state 44
    Lbrace           go to state 45
    StatementList    go to state 100
    If               go to state 47
    IfStmt           go to state 48
    While            go to state 49
    WhileStmt        go to state 50
    For              go to state 51
    ForStmt          go to state 52
    PrintStmt        go to state 53


State 46

    1 Program: StatementList .

    $default  reduce using rule 1 (Program)


State 47

   84 IfStmt: If . LPAREN Condition Rparen Block
   85       | If . LPAREN Condition Rparen Block Else IfStmt
   86       | If . LPAREN Condition Rparen Block Else Block

    LPAREN  shift, and go to state 101


State 48

   54 Statement: IfStmt .

    $default  reduce using rule 54 (Statement)


State 49

   91 WhileStmt: While . LPAREN Condition Rparen Block

    LPAREN  shift, and go to state 102


State 50

   55 Statement: WhileStmt .

    $default  reduce using rule 55 (Statement)


State 51

   97 ForStmt: For . LPAREN InitStmt LSemicolon Condition RSemicolon IDENT IncDec RPAREN Block

    LPAREN  shift, and go to state 103


State 52

   56 Statement: ForStmt .

    $default  reduce using rule 56 (Statement)


State 53

   57 Statement: PrintStmt .

    $default  reduce using rule 57 (Statement)


State 54

   23 Operand: IDENT .
   30 LId: IDENT .

    LBRACK    reduce using rule 30 (LId)
    $default  reduce using rule 23 (Operand)


State 55

   33 ConversionExpr: LPAREN Type . RPAREN Expression

    RPAREN  shift, and go to state 104


State 56

    7 Expression: Expression . OR Expr7
   24 Operand: LPAREN Expression . RPAREN

    OR      shift, and go to state 68
    RPAREN  shift, and go to state 105


State 57

   22 Operand: Literal .

    $default  reduce using rule 22 (Operand)


State 58

   31 IndexExpr: LId . LBRACK Expression RBRACK

    LBRACK  shift, and go to state 106


State 59

   21 PrimaryExpr: ConversionExpr .

    $default  reduce using rule 21 (PrimaryExpr)


State 60

  102 PrintStmt: PRINT LPAREN . Expression RPAREN SEMICOLON

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 54

    Expression      go to state 107
    Expr7           go to state 24
    Expr6           go to state 25
    Expr5           go to state 26
    Expr4           go to state 27
    UnaryExpr       go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 57
    LId             go to state 58
    IndexExpr       go to state 33
    ConversionExpr  go to state 59
    unary_op        go to state 36


State 61

   75 IncDecExpr: IDENT INC .

    $default  reduce using rule 75 (IncDecExpr)


State 62

   76 IncDecExpr: IDENT DEC .

    $default  reduce using rule 76 (IncDecExpr)


State 63

   64 AssignmentExpr: IDENT ASSIGN . Expression

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 54

    Expression      go to state 108
    Expr7           go to state 24
    Expr6           go to state 25
    Expr5           go to state 26
    Expr4           go to state 27
    UnaryExpr       go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 57
    LId             go to state 58
    IndexExpr       go to state 33
    ConversionExpr  go to state 59
    unary_op        go to state 36


State 64

    0 $accept: Program $end .

    $default  accept


State 65

   59 DeclarationStmt: Type IDENT . SEMICOLON
   60                | Type IDENT . ASSIGN Expression SEMICOLON
   61                | Type IDENT . LBRACK Expression RBRACK SEMICOLON

    ASSIGN     shift, and go to state 109
    LBRACK     shift, and go to state 110
    SEMICOLON  shift, and go to state 111


State 66

   77 IncDecExpr: Expression INC .

    $default  reduce using rule 77 (IncDecExpr)


State 67

   78 IncDecExpr: Expression DEC .

    $default  reduce using rule 78 (IncDecExpr)


State 68

    7 Expression: Expression OR . Expr7

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 54

    Expr7           go to state 112
    Expr6           go to state 25
    Expr5           go to state 26
    Expr4           go to state 27
    UnaryExpr       go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 57
    LId             go to state 58
    IndexExpr       go to state 33
    ConversionExpr  go to state 59
    unary_op        go to state 36


State 69

   58 ExpressionStmt: Expression SEMICOLON .

    $default  reduce using rule 58 (ExpressionStmt)


State 70

    9 Expr7: Expr7 AND . Expr6

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 54

    Expr6           go to state 113
    Expr5           go to state 26
    Expr4           go to state 27
    UnaryExpr       go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 57
    LId             go to state 58
    IndexExpr       go to state 33
    ConversionExpr  go to state 59
    unary_op        go to state 36


State 71

   38 cmp_op: GTR .

    $default  reduce using rule 38 (cmp_op)


State 72

   36 cmp_op: LSS .

    $default  reduce using rule 36 (cmp_op)


State 73

   39 cmp_op: GEQ .

    $default  reduce using rule 39 (cmp_op)


State 74

   37 cmp_op: LEQ .

    $default  reduce using rule 37 (cmp_op)


State 75

   34 cmp_op: EQL .

    $default  reduce using rule 34 (cmp_op)


State 76

   35 cmp_op: NEQ .

    $default  reduce using rule 35 (cmp_op)


State 77

   11 Expr6: Expr6 cmp_op . Expr5

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 54

    Expr5           go to state 114
    Expr4           go to state 27
    UnaryExpr       go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 57
    LId             go to state 58
    IndexExpr       go to state 33
    ConversionExpr  go to state 59
    unary_op        go to state 36


State 78

   40 add_op: ADD .

    $default  reduce using rule 40 (add_op)


State 79

   41 add_op: SUB .

    $default  reduce using rule 41 (add_op)


State 80

   13 Expr5: Expr5 add_op . Expr4

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 54

    Expr4           go to state 115
    UnaryExpr       go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 57
    LId             go to state 58
    IndexExpr       go to state 33
    ConversionExpr  go to state 59
    unary_op        go to state 36


State 81

   42 mul_op: MUL .

    $default  reduce using rule 42 (mul_op)


State 82

   43 mul_op: QUO .

    $default  reduce using rule 43 (mul_op)


State 83

   44 mul_op: REM .

    $default  reduce using rule 44 (mul_op)


State 84

   15 Expr4: Expr4 mul_op . UnaryExpr

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 54

    UnaryExpr       go to state 116
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 57
    LId             go to state 58
    IndexExpr       go to state 33
    ConversionExpr  go to state 59
    unary_op        go to state 36


State 85

   68 assign_op: ASSIGN .

    $default  reduce using rule 68 (assign_op)


State 86

   69 assign_op: ADD_ASSIGN .

    $default  reduce using rule 69 (assign_op)


State 87

   70 assign_op: SUB_ASSIGN .

    $default  reduce using rule 70 (assign_op)


State 88

   71 assign_op: MUL_ASSIGN .

    $default  reduce using rule 71 (assign_op)


State 89

   72 assign_op: QUO_ASSIGN .

    $default  reduce using rule 72 (assign_op)


State 90

   73 assign_op: REM_ASSIGN .

    $default  reduce using rule 73 (assign_op)


State 91

   63 AssignmentExpr: Literal assign_op . Expression

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 54

    Expression      go to state 117
    Expr7           go to state 24
    Expr6           go to state 25
    Expr5           go to state 26
    Expr4           go to state 27
    UnaryExpr       go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 57
    LId             go to state 58
    IndexExpr       go to state 33
    ConversionExpr  go to state 59
    unary_op        go to state 36


State 92

   31 IndexExpr: LId LBRACK . Expression RBRACK
   32 LIndexExpr: LId LBRACK . Operand RBRACK

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 54

    Expression      go to state 118
    Expr7           go to state 24
    Expr6           go to state 25
    Expr5           go to state 26
    Expr4           go to state 27
    UnaryExpr       go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 119
    Literal         go to state 57
    LId             go to state 58
    IndexExpr       go to state 33
    ConversionExpr  go to state 59
    unary_op        go to state 36


State 93

   65 AssignmentExpr: LId assign_op . Expression

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 54

    Expression      go to state 120
    Expr7           go to state 24
    Expr6           go to state 25
    Expr5           go to state 26
    Expr4           go to state 27
    UnaryExpr       go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 57
    LId             go to state 58
    IndexExpr       go to state 33
    ConversionExpr  go to state 59
    unary_op        go to state 36


State 94

   66 AssignmentExpr: LIndexExpr assign_op . Expression

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 54

    Expression      go to state 121
    Expr7           go to state 24
    Expr6           go to state 25
    Expr5           go to state 26
    Expr4           go to state 27
    UnaryExpr       go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 57
    LId             go to state 58
    IndexExpr       go to state 33
    ConversionExpr  go to state 59
    unary_op        go to state 36


State 95

   67 AssignmentExpr: ConversionExpr assign_op . Expression

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 54

    Expression      go to state 122
    Expr7           go to state 24
    Expr6           go to state 25
    Expr5           go to state 26
    Expr4           go to state 27
    UnaryExpr       go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 57
    LId             go to state 58
    IndexExpr       go to state 33
    ConversionExpr  go to state 59
    unary_op        go to state 36


State 96

   18 UnaryExpr: unary_op UnaryExpr .

    $default  reduce using rule 18 (UnaryExpr)


State 97

   48 Statement: Statement . Statement
   48          | Statement Statement .

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACE      shift, and go to state 5
    PRINT       shift, and go to state 6
    IF          shift, and go to state 7
    FOR         shift, and go to state 8
    WHILE       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    BOOL        shift, and go to state 12
    STRING      shift, and go to state 13
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 19

    ADD         [reduce using rule 48 (Statement)]
    SUB         [reduce using rule 48 (Statement)]
    NOT         [reduce using rule 48 (Statement)]
    LPAREN      [reduce using rule 48 (Statement)]
    LBRACE      [reduce using rule 48 (Statement)]
    PRINT       [reduce using rule 48 (Statement)]
    IF          [reduce using rule 48 (Statement)]
    FOR         [reduce using rule 48 (Statement)]
    WHILE       [reduce using rule 48 (Statement)]
    INT         [reduce using rule 48 (Statement)]
    FLOAT       [reduce using rule 48 (Statement)]
    BOOL        [reduce using rule 48 (Statement)]
    STRING      [reduce using rule 48 (Statement)]
    TRUE        [reduce using rule 48 (Statement)]
    FALSE       [reduce using rule 48 (Statement)]
    INT_LIT     [reduce using rule 48 (Statement)]
    FLOAT_LIT   [reduce using rule 48 (Statement)]
    STRING_LIT  [reduce using rule 48 (Statement)]
    IDENT       [reduce using rule 48 (Statement)]
    $default    reduce using rule 48 (Statement)

    Type             go to state 21
    TypeName         go to state 22
    Expression       go to state 23
    Expr7            go to state 24
    Expr6            go to state 25
    Expr5            go to state 26
    Expr4            go to state 27
    UnaryExpr        go to state 28
    PrimaryExpr      go to state 29
    Operand          go to state 30
    Literal          go to state 31
    LId              go to state 32
    IndexExpr        go to state 33
    LIndexExpr       go to state 34
    ConversionExpr   go to state 35
    unary_op         go to state 36
    Statement        go to state 97
    ExpressionStmt   go to state 38
    DeclarationStmt  go to state 39
    AssignmentStmt   go to state 40
    AssignmentExpr   go to state 41
    IncDecStmt       go to state 42
    IncDecExpr       go to state 43
    Block            go to state 44
    Lbrace           go to state 45
    If               go to state 47
    IfStmt           go to state 48
    While            go to state 49
    WhileStmt        go to state 50
    For              go to state 51
    ForStmt          go to state 52
    PrintStmt        go to state 53


State 98

   62 AssignmentStmt: AssignmentExpr SEMICOLON .

    $default  reduce using rule 62 (AssignmentStmt)


State 99

   74 IncDecStmt: IncDecExpr SEMICOLON .

    $default  reduce using rule 74 (IncDecStmt)


State 100

   79 Block: Lbrace StatementList . Rbrace

    RBRACE  shift, and go to state 123

    Rbrace  go to state 124


State 101

   84 IfStmt: If LPAREN . Condition Rparen Block
   85       | If LPAREN . Condition Rparen Block Else IfStmt
   86       | If LPAREN . Condition Rparen Block Else Block

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 54

    Expression      go to state 125
    Expr7           go to state 24
    Expr6           go to state 25
    Expr5           go to state 26
    Expr4           go to state 27
    UnaryExpr       go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 57
    LId             go to state 58
    IndexExpr       go to state 33
    ConversionExpr  go to state 59
    unary_op        go to state 36
    Condition       go to state 126


State 102

   91 WhileStmt: While LPAREN . Condition Rparen Block

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 54

    Expression      go to state 125
    Expr7           go to state 24
    Expr6           go to state 25
    Expr5           go to state 26
    Expr4           go to state 27
    UnaryExpr       go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 57
    LId             go to state 58
    IndexExpr       go to state 33
    ConversionExpr  go to state 59
    unary_op        go to state 36
    Condition       go to state 127


State 103

   97 ForStmt: For LPAREN . InitStmt LSemicolon Condition RSemicolon IDENT IncDec RPAREN Block

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 19

    Expression      go to state 128
    Expr7           go to state 24
    Expr6           go to state 25
    Expr5           go to state 26
    Expr4           go to state 27
    UnaryExpr       go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 31
    LId             go to state 32
    IndexExpr       go to state 33
    LIndexExpr      go to state 34
    ConversionExpr  go to state 35
    unary_op        go to state 36
    AssignmentExpr  go to state 129
    IncDecExpr      go to state 130
    InitStmt        go to state 131
    SimpleExpr      go to state 132


State 104

   33 ConversionExpr: LPAREN Type RPAREN . Expression

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 54

    Expression      go to state 133
    Expr7           go to state 24
    Expr6           go to state 25
    Expr5           go to state 26
    Expr4           go to state 27
    UnaryExpr       go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 57
    LId             go to state 58
    IndexExpr       go to state 33
    ConversionExpr  go to state 59
    unary_op        go to state 36


State 105

   24 Operand: LPAREN Expression RPAREN .

    $default  reduce using rule 24 (Operand)


State 106

   31 IndexExpr: LId LBRACK . Expression RBRACK

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 54

    Expression      go to state 118
    Expr7           go to state 24
    Expr6           go to state 25
    Expr5           go to state 26
    Expr4           go to state 27
    UnaryExpr       go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 57
    LId             go to state 58
    IndexExpr       go to state 33
    ConversionExpr  go to state 59
    unary_op        go to state 36


State 107

    7 Expression: Expression . OR Expr7
  102 PrintStmt: PRINT LPAREN Expression . RPAREN SEMICOLON

    OR      shift, and go to state 68
    RPAREN  shift, and go to state 134


State 108

    7 Expression: Expression . OR Expr7
   64 AssignmentExpr: IDENT ASSIGN Expression .

    OR  shift, and go to state 68

    $default  reduce using rule 64 (AssignmentExpr)


State 109

   60 DeclarationStmt: Type IDENT ASSIGN . Expression SEMICOLON

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 54

    Expression      go to state 135
    Expr7           go to state 24
    Expr6           go to state 25
    Expr5           go to state 26
    Expr4           go to state 27
    UnaryExpr       go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 57
    LId             go to state 58
    IndexExpr       go to state 33
    ConversionExpr  go to state 59
    unary_op        go to state 36


State 110

   61 DeclarationStmt: Type IDENT LBRACK . Expression RBRACK SEMICOLON

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 54

    Expression      go to state 136
    Expr7           go to state 24
    Expr6           go to state 25
    Expr5           go to state 26
    Expr4           go to state 27
    UnaryExpr       go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 57
    LId             go to state 58
    IndexExpr       go to state 33
    ConversionExpr  go to state 59
    unary_op        go to state 36


State 111

   59 DeclarationStmt: Type IDENT SEMICOLON .

    $default  reduce using rule 59 (DeclarationStmt)


State 112

    7 Expression: Expression OR Expr7 .
    9 Expr7: Expr7 . AND Expr6

    AND  shift, and go to state 70

    AND       [reduce using rule 7 (Expression)]
    $default  reduce using rule 7 (Expression)


State 113

    9 Expr7: Expr7 AND Expr6 .
   11 Expr6: Expr6 . cmp_op Expr5

    GTR  shift, and go to state 71
    LSS  shift, and go to state 72
    GEQ  shift, and go to state 73
    LEQ  shift, and go to state 74
    EQL  shift, and go to state 75
    NEQ  shift, and go to state 76

    GTR       [reduce using rule 9 (Expr7)]
    LSS       [reduce using rule 9 (Expr7)]
    GEQ       [reduce using rule 9 (Expr7)]
    LEQ       [reduce using rule 9 (Expr7)]
    EQL       [reduce using rule 9 (Expr7)]
    NEQ       [reduce using rule 9 (Expr7)]
    $default  reduce using rule 9 (Expr7)

    cmp_op  go to state 77


State 114

   11 Expr6: Expr6 cmp_op Expr5 .
   13 Expr5: Expr5 . add_op Expr4

    ADD  shift, and go to state 78
    SUB  shift, and go to state 79

    ADD       [reduce using rule 11 (Expr6)]
    SUB       [reduce using rule 11 (Expr6)]
    $default  reduce using rule 11 (Expr6)

    add_op  go to state 80


State 115

   13 Expr5: Expr5 add_op Expr4 .
   15 Expr4: Expr4 . mul_op UnaryExpr

    MUL  shift, and go to state 81
    QUO  shift, and go to state 82
    REM  shift, and go to state 83

    MUL       [reduce using rule 13 (Expr5)]
    QUO       [reduce using rule 13 (Expr5)]
    REM       [reduce using rule 13 (Expr5)]
    $default  reduce using rule 13 (Expr5)

    mul_op  go to state 84


State 116

   15 Expr4: Expr4 mul_op UnaryExpr .

    $default  reduce using rule 15 (Expr4)


State 117

    7 Expression: Expression . OR Expr7
   63 AssignmentExpr: Literal assign_op Expression .

    OR  shift, and go to state 68

    $default  reduce using rule 63 (AssignmentExpr)


State 118

    7 Expression: Expression . OR Expr7
   31 IndexExpr: LId LBRACK Expression . RBRACK

    OR      shift, and go to state 68
    RBRACK  shift, and go to state 137


State 119

   19 PrimaryExpr: Operand .
   32 LIndexExpr: LId LBRACK Operand . RBRACK

    RBRACK  shift, and go to state 138

    RBRACK    [reduce using rule 19 (PrimaryExpr)]
    $default  reduce using rule 19 (PrimaryExpr)


State 120

    7 Expression: Expression . OR Expr7
   65 AssignmentExpr: LId assign_op Expression .

    OR  shift, and go to state 68

    $default  reduce using rule 65 (AssignmentExpr)


State 121

    7 Expression: Expression . OR Expr7
   66 AssignmentExpr: LIndexExpr assign_op Expression .

    OR  shift, and go to state 68

    $default  reduce using rule 66 (AssignmentExpr)


State 122

    7 Expression: Expression . OR Expr7
   67 AssignmentExpr: ConversionExpr assign_op Expression .

    OR  shift, and go to state 68

    $default  reduce using rule 67 (AssignmentExpr)


State 123

   81 Rbrace: RBRACE .

    $default  reduce using rule 81 (Rbrace)


State 124

   79 Block: Lbrace StatementList Rbrace .

    $default  reduce using rule 79 (Block)


State 125

    7 Expression: Expression . OR Expr7
   87 Condition: Expression .

    OR  shift, and go to state 68

    $default  reduce using rule 87 (Condition)


State 126

   84 IfStmt: If LPAREN Condition . Rparen Block
   85       | If LPAREN Condition . Rparen Block Else IfStmt
   86       | If LPAREN Condition . Rparen Block Else Block

    RPAREN  shift, and go to state 139

    Rparen  go to state 140


State 127

   91 WhileStmt: While LPAREN Condition . Rparen Block

    RPAREN  shift, and go to state 139

    Rparen  go to state 141


State 128

    7 Expression: Expression . OR Expr7
   77 IncDecExpr: Expression . INC
   78           | Expression . DEC
  100 SimpleExpr: Expression .

    INC  shift, and go to state 66
    DEC  shift, and go to state 67
    OR   shift, and go to state 68

    $default  reduce using rule 100 (SimpleExpr)


State 129

   99 SimpleExpr: AssignmentExpr .

    $default  reduce using rule 99 (SimpleExpr)


State 130

  101 SimpleExpr: IncDecExpr .

    $default  reduce using rule 101 (SimpleExpr)


State 131

   97 ForStmt: For LPAREN InitStmt . LSemicolon Condition RSemicolon IDENT IncDec RPAREN Block

    SEMICOLON  shift, and go to state 142

    LSemicolon  go to state 143


State 132

   98 InitStmt: SimpleExpr .

    $default  reduce using rule 98 (InitStmt)


State 133

    7 Expression: Expression . OR Expr7
   33 ConversionExpr: LPAREN Type RPAREN Expression .

    OR  shift, and go to state 68

    OR        [reduce using rule 33 (ConversionExpr)]
    $default  reduce using rule 33 (ConversionExpr)


State 134

  102 PrintStmt: PRINT LPAREN Expression RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 144


State 135

    7 Expression: Expression . OR Expr7
   60 DeclarationStmt: Type IDENT ASSIGN Expression . SEMICOLON

    OR         shift, and go to state 68
    SEMICOLON  shift, and go to state 145


State 136

    7 Expression: Expression . OR Expr7
   61 DeclarationStmt: Type IDENT LBRACK Expression . RBRACK SEMICOLON

    OR      shift, and go to state 68
    RBRACK  shift, and go to state 146


State 137

   31 IndexExpr: LId LBRACK Expression RBRACK .

    $default  reduce using rule 31 (IndexExpr)


State 138

   32 LIndexExpr: LId LBRACK Operand RBRACK .

    $default  reduce using rule 32 (LIndexExpr)


State 139

   89 Rparen: RPAREN .

    $default  reduce using rule 89 (Rparen)


State 140

   84 IfStmt: If LPAREN Condition Rparen . Block
   85       | If LPAREN Condition Rparen . Block Else IfStmt
   86       | If LPAREN Condition Rparen . Block Else Block

    LBRACE  shift, and go to state 5

    Block   go to state 147
    Lbrace  go to state 45


State 141

   91 WhileStmt: While LPAREN Condition Rparen . Block

    LBRACE  shift, and go to state 5

    Block   go to state 148
    Lbrace  go to state 45


State 142

   93 LSemicolon: SEMICOLON .

    $default  reduce using rule 93 (LSemicolon)


State 143

   97 ForStmt: For LPAREN InitStmt LSemicolon . Condition RSemicolon IDENT IncDec RPAREN Block

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 54

    Expression      go to state 125
    Expr7           go to state 24
    Expr6           go to state 25
    Expr5           go to state 26
    Expr4           go to state 27
    UnaryExpr       go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 57
    LId             go to state 58
    IndexExpr       go to state 33
    ConversionExpr  go to state 59
    unary_op        go to state 36
    Condition       go to state 149


State 144

  102 PrintStmt: PRINT LPAREN Expression RPAREN SEMICOLON .

    $default  reduce using rule 102 (PrintStmt)


State 145

   60 DeclarationStmt: Type IDENT ASSIGN Expression SEMICOLON .

    $default  reduce using rule 60 (DeclarationStmt)


State 146

   61 DeclarationStmt: Type IDENT LBRACK Expression RBRACK . SEMICOLON

    SEMICOLON  shift, and go to state 150


State 147

   84 IfStmt: If LPAREN Condition Rparen Block .
   85       | If LPAREN Condition Rparen Block . Else IfStmt
   86       | If LPAREN Condition Rparen Block . Else Block

    ELSE  shift, and go to state 151

    $default  reduce using rule 84 (IfStmt)

    Else  go to state 152


State 148

   91 WhileStmt: While LPAREN Condition Rparen Block .

    $default  reduce using rule 91 (WhileStmt)


State 149

   97 ForStmt: For LPAREN InitStmt LSemicolon Condition . RSemicolon IDENT IncDec RPAREN Block

    SEMICOLON  shift, and go to state 153

    RSemicolon  go to state 154


State 150

   61 DeclarationStmt: Type IDENT LBRACK Expression RBRACK SEMICOLON .

    $default  reduce using rule 61 (DeclarationStmt)


State 151

   88 Else: ELSE .

    $default  reduce using rule 88 (Else)


State 152

   85 IfStmt: If LPAREN Condition Rparen Block Else . IfStmt
   86       | If LPAREN Condition Rparen Block Else . Block

    LBRACE  shift, and go to state 5
    IF      shift, and go to state 7

    Block   go to state 155
    Lbrace  go to state 45
    If      go to state 47
    IfStmt  go to state 156


State 153

   94 RSemicolon: SEMICOLON .

    $default  reduce using rule 94 (RSemicolon)


State 154

   97 ForStmt: For LPAREN InitStmt LSemicolon Condition RSemicolon . IDENT IncDec RPAREN Block

    IDENT  shift, and go to state 157


State 155

   86 IfStmt: If LPAREN Condition Rparen Block Else Block .

    $default  reduce using rule 86 (IfStmt)


State 156

   85 IfStmt: If LPAREN Condition Rparen Block Else IfStmt .

    $default  reduce using rule 85 (IfStmt)


State 157

   97 ForStmt: For LPAREN InitStmt LSemicolon Condition RSemicolon IDENT . IncDec RPAREN Block

    INC  shift, and go to state 158
    DEC  shift, and go to state 159

    IncDec  go to state 160


State 158

   95 IncDec: INC .

    $default  reduce using rule 95 (IncDec)


State 159

   96 IncDec: DEC .

    $default  reduce using rule 96 (IncDec)


State 160

   97 ForStmt: For LPAREN InitStmt LSemicolon Condition RSemicolon IDENT IncDec . RPAREN Block

    RPAREN  shift, and go to state 161


State 161

   97 ForStmt: For LPAREN InitStmt LSemicolon Condition RSemicolon IDENT IncDec RPAREN . Block

    LBRACE  shift, and go to state 5

    Block   go to state 162
    Lbrace  go to state 45


State 162

   97 ForStmt: For LPAREN InitStmt LSemicolon Condition RSemicolon IDENT IncDec RPAREN Block .

    $default  reduce using rule 97 (ForStmt)
