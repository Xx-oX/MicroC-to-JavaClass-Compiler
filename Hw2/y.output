Terminals unused in grammar

    COMMA
    QUOTA
    RETURN
    CONTINUE
    BREAK
    VOID
    BOOL_LIT


State 24 conflicts: 1 shift/reduce
State 25 conflicts: 6 shift/reduce
State 26 conflicts: 2 shift/reduce
State 27 conflicts: 3 shift/reduce
State 30 conflicts: 1 shift/reduce
State 32 conflicts: 6 shift/reduce
State 88 conflicts: 19 shift/reduce
State 94 conflicts: 2 shift/reduce
State 107 conflicts: 1 shift/reduce
State 109 conflicts: 6 shift/reduce
State 110 conflicts: 2 shift/reduce
State 111 conflicts: 3 shift/reduce
State 117 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: StatementList

    2 Type: TypeName

    3 TypeName: INT
    4         | FLOAT
    5         | STRING
    6         | BOOL

    7 Expression: Expression OR Expr7
    8           | Expr7

    9 Expr7: Expr7 AND Expr6
   10      | Expr6

   11 Expr6: Expr6 cmp_op Expr5
   12      | Expr5

   13 Expr5: Expr5 add_op Expr4
   14      | Expr4

   15 Expr4: Expr4 mul_op UnaryExpr
   16      | UnaryExpr

   17 UnaryExpr: PrimaryExpr
   18          | unary_op UnaryExpr

   19 cmp_op: EQL
   20       | NEQ
   21       | LSS
   22       | LEQ
   23       | GTR
   24       | GEQ

   25 add_op: ADD
   26       | SUB

   27 mul_op: MUL
   28       | QUO
   29       | REM

   30 unary_op: ADD
   31         | SUB
   32         | NOT

   33 PrimaryExpr: Operand
   34            | IndexExpr
   35            | ConversionExpr

   36 Operand: Literal
   37        | IDENT
   38        | LPAREN Expression RPAREN

   39 Literal: INT_LIT
   40        | FLOAT_LIT
   41        | STRING_LIT
   42        | TRUE
   43        | FALSE

   44 IndexExpr: PrimaryExpr LBRACK Expression RBRACK

   45 ConversionExpr: LPAREN Type RPAREN Expression

   46 Statement: Statement Statement
   47          | ExpressionStmt
   48          | DeclarationStmt
   49          | AssignmentStmt
   50          | IncDecStmt
   51          | Block
   52          | IfStmt
   53          | WhileStmt
   54          | ForStmt
   55          | PrintStmt

   56 ExpressionStmt: Expression SEMICOLON

   57 DeclarationStmt: Type IDENT SEMICOLON
   58                | Type IDENT ASSIGN Expression SEMICOLON
   59                | Type IDENT LBRACK Expression RBRACK SEMICOLON

   60 AssignmentStmt: AssignmentExpr SEMICOLON

   61 AssignmentExpr: Literal assign_op Expression
   62               | Expression assign_op Expression

   63 assign_op: ASSIGN
   64          | ADD_ASSIGN
   65          | SUB_ASSIGN
   66          | MUL_ASSIGN
   67          | QUO_ASSIGN
   68          | REM_ASSIGN

   69 IncDecStmt: IncDecExpr SEMICOLON

   70 IncDecExpr: Expression INC
   71           | Expression DEC

   72 Block: Lbrace StatementList Rbrace

   73 Lbrace: LBRACE

   74 Rbrace: RBRACE

   75 StatementList: Statement

   76 IfStmt: IF Condition Block
   77       | IF Condition Block ELSE IfStmt
   78       | IF Condition Block ELSE Block

   79 Condition: Expression

   80 WhileStmt: WHILE LPAREN Condition RPAREN Block

   81 ForStmt: FOR LPAREN ForClause RPAREN Block

   82 ForClause: InitStmt SEMICOLON Condition SEMICOLON PostStmt

   83 InitStmt: SimpleExpr

   84 PostStmt: SimpleExpr

   85 SimpleExpr: AssignmentExpr
   86           | Expression
   87           | IncDecExpr

   88 PrintStmt: PRINT LPAREN IDENT RPAREN SEMICOLON
   89          | PRINT LPAREN IDENT LBRACK INT_LIT RBRACK RPAREN SEMICOLON
   90          | PRINT LPAREN Expression RPAREN SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ADD (258) 25 30
    SUB (259) 26 31
    MUL (260) 27
    QUO (261) 28
    REM (262) 29
    INC (263) 70
    DEC (264) 71
    GTR (265) 23
    LSS (266) 21
    GEQ (267) 24
    LEQ (268) 22
    EQL (269) 19
    NEQ (270) 20
    ASSIGN (271) 58 63
    ADD_ASSIGN (272) 64
    SUB_ASSIGN (273) 65
    MUL_ASSIGN (274) 66
    QUO_ASSIGN (275) 67
    REM_ASSIGN (276) 68
    AND (277) 9
    OR (278) 7
    NOT (279) 32
    LPAREN (280) 38 45 80 81 88 89 90
    RPAREN (281) 38 45 80 81 88 89 90
    LBRACK (282) 44 59 89
    RBRACK (283) 44 59 89
    LBRACE (284) 73
    RBRACE (285) 74
    SEMICOLON (286) 56 57 58 59 60 69 82 88 89 90
    COMMA (287)
    QUOTA (288)
    PRINT (289) 88 89 90
    RETURN (290)
    IF (291) 76 77 78
    ELSE (292) 77 78
    FOR (293) 81
    WHILE (294) 80
    INT (295) 3
    FLOAT (296) 4
    BOOL (297) 6
    STRING (298) 5
    TRUE (299) 42
    FALSE (300) 43
    CONTINUE (301)
    BREAK (302)
    VOID (303)
    INT_LIT <i_val> (304) 39 89
    FLOAT_LIT <f_val> (305) 40
    STRING_LIT <s_val> (306) 41
    BOOL_LIT <s_val> (307)
    IDENT <s_val> (308) 37 57 58 59 88 89


Nonterminals, with rules where they appear

    $accept (54)
        on left: 0
    Program (55)
        on left: 1
        on right: 0
    Type <s_val> (56)
        on left: 2
        on right: 45 57 58 59
    TypeName <s_val> (57)
        on left: 3 4 5 6
        on right: 2
    Expression <s_val> (58)
        on left: 7 8
        on right: 7 38 44 45 56 58 59 61 62 70 71 79 86 90
    Expr7 <s_val> (59)
        on left: 9 10
        on right: 7 8 9
    Expr6 <s_val> (60)
        on left: 11 12
        on right: 9 10 11
    Expr5 <s_val> (61)
        on left: 13 14
        on right: 11 12 13
    Expr4 <s_val> (62)
        on left: 15 16
        on right: 13 14 15
    UnaryExpr <s_val> (63)
        on left: 17 18
        on right: 15 16 18
    cmp_op <s_val> (64)
        on left: 19 20 21 22 23 24
        on right: 11
    add_op <s_val> (65)
        on left: 25 26
        on right: 13
    mul_op <s_val> (66)
        on left: 27 28 29
        on right: 15
    unary_op <s_val> (67)
        on left: 30 31 32
        on right: 18
    PrimaryExpr <s_val> (68)
        on left: 33 34 35
        on right: 17 44
    Operand <s_val> (69)
        on left: 36 37 38
        on right: 33
    Literal <s_val> (70)
        on left: 39 40 41 42 43
        on right: 36 61
    IndexExpr <s_val> (71)
        on left: 44
        on right: 34
    ConversionExpr <s_val> (72)
        on left: 45
        on right: 35
    Statement (73)
        on left: 46 47 48 49 50 51 52 53 54 55
        on right: 46 75
    ExpressionStmt (74)
        on left: 56
        on right: 47
    DeclarationStmt (75)
        on left: 57 58 59
        on right: 48
    AssignmentStmt (76)
        on left: 60
        on right: 49
    AssignmentExpr (77)
        on left: 61 62
        on right: 60 85
    assign_op <s_val> (78)
        on left: 63 64 65 66 67 68
        on right: 61 62
    IncDecStmt (79)
        on left: 69
        on right: 50
    IncDecExpr (80)
        on left: 70 71
        on right: 69 87
    Block (81)
        on left: 72
        on right: 51 76 77 78 80 81
    Lbrace (82)
        on left: 73
        on right: 72
    Rbrace (83)
        on left: 74
        on right: 72
    StatementList (84)
        on left: 75
        on right: 1 72
    IfStmt (85)
        on left: 76 77 78
        on right: 52 77
    Condition (86)
        on left: 79
        on right: 76 77 78 80 82
    WhileStmt (87)
        on left: 80
        on right: 53
    ForStmt (88)
        on left: 81
        on right: 54
    ForClause (89)
        on left: 82
        on right: 81
    InitStmt (90)
        on left: 83
        on right: 82
    PostStmt (91)
        on left: 84
        on right: 82
    SimpleExpr (92)
        on left: 85 86 87
        on right: 83 84
    PrintStmt (93)
        on left: 88 89 90
        on right: 55


State 0

    0 $accept: . Program $end

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACE      shift, and go to state 5
    PRINT       shift, and go to state 6
    IF          shift, and go to state 7
    FOR         shift, and go to state 8
    WHILE       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    BOOL        shift, and go to state 12
    STRING      shift, and go to state 13
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 19

    Program          go to state 20
    Type             go to state 21
    TypeName         go to state 22
    Expression       go to state 23
    Expr7            go to state 24
    Expr6            go to state 25
    Expr5            go to state 26
    Expr4            go to state 27
    UnaryExpr        go to state 28
    unary_op         go to state 29
    PrimaryExpr      go to state 30
    Operand          go to state 31
    Literal          go to state 32
    IndexExpr        go to state 33
    ConversionExpr   go to state 34
    Statement        go to state 35
    ExpressionStmt   go to state 36
    DeclarationStmt  go to state 37
    AssignmentStmt   go to state 38
    AssignmentExpr   go to state 39
    IncDecStmt       go to state 40
    IncDecExpr       go to state 41
    Block            go to state 42
    Lbrace           go to state 43
    StatementList    go to state 44
    IfStmt           go to state 45
    WhileStmt        go to state 46
    ForStmt          go to state 47
    PrintStmt        go to state 48


State 1

   30 unary_op: ADD .

    $default  reduce using rule 30 (unary_op)


State 2

   31 unary_op: SUB .

    $default  reduce using rule 31 (unary_op)


State 3

   32 unary_op: NOT .

    $default  reduce using rule 32 (unary_op)


State 4

   38 Operand: LPAREN . Expression RPAREN
   45 ConversionExpr: LPAREN . Type RPAREN Expression

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    BOOL        shift, and go to state 12
    STRING      shift, and go to state 13
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 19

    Type            go to state 49
    TypeName        go to state 22
    Expression      go to state 50
    Expr7           go to state 24
    Expr6           go to state 25
    Expr5           go to state 26
    Expr4           go to state 27
    UnaryExpr       go to state 28
    unary_op        go to state 29
    PrimaryExpr     go to state 30
    Operand         go to state 31
    Literal         go to state 51
    IndexExpr       go to state 33
    ConversionExpr  go to state 34


State 5

   73 Lbrace: LBRACE .

    $default  reduce using rule 73 (Lbrace)


State 6

   88 PrintStmt: PRINT . LPAREN IDENT RPAREN SEMICOLON
   89          | PRINT . LPAREN IDENT LBRACK INT_LIT RBRACK RPAREN SEMICOLON
   90          | PRINT . LPAREN Expression RPAREN SEMICOLON

    LPAREN  shift, and go to state 52


State 7

   76 IfStmt: IF . Condition Block
   77       | IF . Condition Block ELSE IfStmt
   78       | IF . Condition Block ELSE Block

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 19

    Expression      go to state 53
    Expr7           go to state 24
    Expr6           go to state 25
    Expr5           go to state 26
    Expr4           go to state 27
    UnaryExpr       go to state 28
    unary_op        go to state 29
    PrimaryExpr     go to state 30
    Operand         go to state 31
    Literal         go to state 51
    IndexExpr       go to state 33
    ConversionExpr  go to state 34
    Condition       go to state 54


State 8

   81 ForStmt: FOR . LPAREN ForClause RPAREN Block

    LPAREN  shift, and go to state 55


State 9

   80 WhileStmt: WHILE . LPAREN Condition RPAREN Block

    LPAREN  shift, and go to state 56


State 10

    3 TypeName: INT .

    $default  reduce using rule 3 (TypeName)


State 11

    4 TypeName: FLOAT .

    $default  reduce using rule 4 (TypeName)


State 12

    6 TypeName: BOOL .

    $default  reduce using rule 6 (TypeName)


State 13

    5 TypeName: STRING .

    $default  reduce using rule 5 (TypeName)


State 14

   42 Literal: TRUE .

    $default  reduce using rule 42 (Literal)


State 15

   43 Literal: FALSE .

    $default  reduce using rule 43 (Literal)


State 16

   39 Literal: INT_LIT .

    $default  reduce using rule 39 (Literal)


State 17

   40 Literal: FLOAT_LIT .

    $default  reduce using rule 40 (Literal)


State 18

   41 Literal: STRING_LIT .

    $default  reduce using rule 41 (Literal)


State 19

   37 Operand: IDENT .

    $default  reduce using rule 37 (Operand)


State 20

    0 $accept: Program . $end

    $end  shift, and go to state 57


State 21

   57 DeclarationStmt: Type . IDENT SEMICOLON
   58                | Type . IDENT ASSIGN Expression SEMICOLON
   59                | Type . IDENT LBRACK Expression RBRACK SEMICOLON

    IDENT  shift, and go to state 58


State 22

    2 Type: TypeName .

    $default  reduce using rule 2 (Type)


State 23

    7 Expression: Expression . OR Expr7
   56 ExpressionStmt: Expression . SEMICOLON
   62 AssignmentExpr: Expression . assign_op Expression
   70 IncDecExpr: Expression . INC
   71           | Expression . DEC

    INC         shift, and go to state 59
    DEC         shift, and go to state 60
    ASSIGN      shift, and go to state 61
    ADD_ASSIGN  shift, and go to state 62
    SUB_ASSIGN  shift, and go to state 63
    MUL_ASSIGN  shift, and go to state 64
    QUO_ASSIGN  shift, and go to state 65
    REM_ASSIGN  shift, and go to state 66
    OR          shift, and go to state 67
    SEMICOLON   shift, and go to state 68

    assign_op  go to state 69


State 24

    8 Expression: Expr7 .
    9 Expr7: Expr7 . AND Expr6

    AND  shift, and go to state 70

    AND       [reduce using rule 8 (Expression)]
    $default  reduce using rule 8 (Expression)


State 25

   10 Expr7: Expr6 .
   11 Expr6: Expr6 . cmp_op Expr5

    GTR  shift, and go to state 71
    LSS  shift, and go to state 72
    GEQ  shift, and go to state 73
    LEQ  shift, and go to state 74
    EQL  shift, and go to state 75
    NEQ  shift, and go to state 76

    GTR       [reduce using rule 10 (Expr7)]
    LSS       [reduce using rule 10 (Expr7)]
    GEQ       [reduce using rule 10 (Expr7)]
    LEQ       [reduce using rule 10 (Expr7)]
    EQL       [reduce using rule 10 (Expr7)]
    NEQ       [reduce using rule 10 (Expr7)]
    $default  reduce using rule 10 (Expr7)

    cmp_op  go to state 77


State 26

   12 Expr6: Expr5 .
   13 Expr5: Expr5 . add_op Expr4

    ADD  shift, and go to state 78
    SUB  shift, and go to state 79

    ADD       [reduce using rule 12 (Expr6)]
    SUB       [reduce using rule 12 (Expr6)]
    $default  reduce using rule 12 (Expr6)

    add_op  go to state 80


State 27

   14 Expr5: Expr4 .
   15 Expr4: Expr4 . mul_op UnaryExpr

    MUL  shift, and go to state 81
    QUO  shift, and go to state 82
    REM  shift, and go to state 83

    MUL       [reduce using rule 14 (Expr5)]
    QUO       [reduce using rule 14 (Expr5)]
    REM       [reduce using rule 14 (Expr5)]
    $default  reduce using rule 14 (Expr5)

    mul_op  go to state 84


State 28

   16 Expr4: UnaryExpr .

    $default  reduce using rule 16 (Expr4)


State 29

   18 UnaryExpr: unary_op . UnaryExpr

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 19

    UnaryExpr       go to state 85
    unary_op        go to state 29
    PrimaryExpr     go to state 30
    Operand         go to state 31
    Literal         go to state 51
    IndexExpr       go to state 33
    ConversionExpr  go to state 34


State 30

   17 UnaryExpr: PrimaryExpr .
   44 IndexExpr: PrimaryExpr . LBRACK Expression RBRACK

    LBRACK  shift, and go to state 86

    LBRACK    [reduce using rule 17 (UnaryExpr)]
    $default  reduce using rule 17 (UnaryExpr)


State 31

   33 PrimaryExpr: Operand .

    $default  reduce using rule 33 (PrimaryExpr)


State 32

   36 Operand: Literal .
   61 AssignmentExpr: Literal . assign_op Expression

    ASSIGN      shift, and go to state 61
    ADD_ASSIGN  shift, and go to state 62
    SUB_ASSIGN  shift, and go to state 63
    MUL_ASSIGN  shift, and go to state 64
    QUO_ASSIGN  shift, and go to state 65
    REM_ASSIGN  shift, and go to state 66

    ASSIGN      [reduce using rule 36 (Operand)]
    ADD_ASSIGN  [reduce using rule 36 (Operand)]
    SUB_ASSIGN  [reduce using rule 36 (Operand)]
    MUL_ASSIGN  [reduce using rule 36 (Operand)]
    QUO_ASSIGN  [reduce using rule 36 (Operand)]
    REM_ASSIGN  [reduce using rule 36 (Operand)]
    $default    reduce using rule 36 (Operand)

    assign_op  go to state 87


State 33

   34 PrimaryExpr: IndexExpr .

    $default  reduce using rule 34 (PrimaryExpr)


State 34

   35 PrimaryExpr: ConversionExpr .

    $default  reduce using rule 35 (PrimaryExpr)


State 35

   46 Statement: Statement . Statement
   75 StatementList: Statement .

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACE      shift, and go to state 5
    PRINT       shift, and go to state 6
    IF          shift, and go to state 7
    FOR         shift, and go to state 8
    WHILE       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    BOOL        shift, and go to state 12
    STRING      shift, and go to state 13
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 19

    $default  reduce using rule 75 (StatementList)

    Type             go to state 21
    TypeName         go to state 22
    Expression       go to state 23
    Expr7            go to state 24
    Expr6            go to state 25
    Expr5            go to state 26
    Expr4            go to state 27
    UnaryExpr        go to state 28
    unary_op         go to state 29
    PrimaryExpr      go to state 30
    Operand          go to state 31
    Literal          go to state 32
    IndexExpr        go to state 33
    ConversionExpr   go to state 34
    Statement        go to state 88
    ExpressionStmt   go to state 36
    DeclarationStmt  go to state 37
    AssignmentStmt   go to state 38
    AssignmentExpr   go to state 39
    IncDecStmt       go to state 40
    IncDecExpr       go to state 41
    Block            go to state 42
    Lbrace           go to state 43
    IfStmt           go to state 45
    WhileStmt        go to state 46
    ForStmt          go to state 47
    PrintStmt        go to state 48


State 36

   47 Statement: ExpressionStmt .

    $default  reduce using rule 47 (Statement)


State 37

   48 Statement: DeclarationStmt .

    $default  reduce using rule 48 (Statement)


State 38

   49 Statement: AssignmentStmt .

    $default  reduce using rule 49 (Statement)


State 39

   60 AssignmentStmt: AssignmentExpr . SEMICOLON

    SEMICOLON  shift, and go to state 89


State 40

   50 Statement: IncDecStmt .

    $default  reduce using rule 50 (Statement)


State 41

   69 IncDecStmt: IncDecExpr . SEMICOLON

    SEMICOLON  shift, and go to state 90


State 42

   51 Statement: Block .

    $default  reduce using rule 51 (Statement)


State 43

   72 Block: Lbrace . StatementList Rbrace

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACE      shift, and go to state 5
    PRINT       shift, and go to state 6
    IF          shift, and go to state 7
    FOR         shift, and go to state 8
    WHILE       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    BOOL        shift, and go to state 12
    STRING      shift, and go to state 13
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 19

    Type             go to state 21
    TypeName         go to state 22
    Expression       go to state 23
    Expr7            go to state 24
    Expr6            go to state 25
    Expr5            go to state 26
    Expr4            go to state 27
    UnaryExpr        go to state 28
    unary_op         go to state 29
    PrimaryExpr      go to state 30
    Operand          go to state 31
    Literal          go to state 32
    IndexExpr        go to state 33
    ConversionExpr   go to state 34
    Statement        go to state 35
    ExpressionStmt   go to state 36
    DeclarationStmt  go to state 37
    AssignmentStmt   go to state 38
    AssignmentExpr   go to state 39
    IncDecStmt       go to state 40
    IncDecExpr       go to state 41
    Block            go to state 42
    Lbrace           go to state 43
    StatementList    go to state 91
    IfStmt           go to state 45
    WhileStmt        go to state 46
    ForStmt          go to state 47
    PrintStmt        go to state 48


State 44

    1 Program: StatementList .

    $default  reduce using rule 1 (Program)


State 45

   52 Statement: IfStmt .

    $default  reduce using rule 52 (Statement)


State 46

   53 Statement: WhileStmt .

    $default  reduce using rule 53 (Statement)


State 47

   54 Statement: ForStmt .

    $default  reduce using rule 54 (Statement)


State 48

   55 Statement: PrintStmt .

    $default  reduce using rule 55 (Statement)


State 49

   45 ConversionExpr: LPAREN Type . RPAREN Expression

    RPAREN  shift, and go to state 92


State 50

    7 Expression: Expression . OR Expr7
   38 Operand: LPAREN Expression . RPAREN

    OR      shift, and go to state 67
    RPAREN  shift, and go to state 93


State 51

   36 Operand: Literal .

    $default  reduce using rule 36 (Operand)


State 52

   88 PrintStmt: PRINT LPAREN . IDENT RPAREN SEMICOLON
   89          | PRINT LPAREN . IDENT LBRACK INT_LIT RBRACK RPAREN SEMICOLON
   90          | PRINT LPAREN . Expression RPAREN SEMICOLON

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 94

    Expression      go to state 95
    Expr7           go to state 24
    Expr6           go to state 25
    Expr5           go to state 26
    Expr4           go to state 27
    UnaryExpr       go to state 28
    unary_op        go to state 29
    PrimaryExpr     go to state 30
    Operand         go to state 31
    Literal         go to state 51
    IndexExpr       go to state 33
    ConversionExpr  go to state 34


State 53

    7 Expression: Expression . OR Expr7
   79 Condition: Expression .

    OR  shift, and go to state 67

    $default  reduce using rule 79 (Condition)


State 54

   76 IfStmt: IF Condition . Block
   77       | IF Condition . Block ELSE IfStmt
   78       | IF Condition . Block ELSE Block

    LBRACE  shift, and go to state 5

    Block   go to state 96
    Lbrace  go to state 43


State 55

   81 ForStmt: FOR LPAREN . ForClause RPAREN Block

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 19

    Expression      go to state 97
    Expr7           go to state 24
    Expr6           go to state 25
    Expr5           go to state 26
    Expr4           go to state 27
    UnaryExpr       go to state 28
    unary_op        go to state 29
    PrimaryExpr     go to state 30
    Operand         go to state 31
    Literal         go to state 32
    IndexExpr       go to state 33
    ConversionExpr  go to state 34
    AssignmentExpr  go to state 98
    IncDecExpr      go to state 99
    ForClause       go to state 100
    InitStmt        go to state 101
    SimpleExpr      go to state 102


State 56

   80 WhileStmt: WHILE LPAREN . Condition RPAREN Block

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 19

    Expression      go to state 53
    Expr7           go to state 24
    Expr6           go to state 25
    Expr5           go to state 26
    Expr4           go to state 27
    UnaryExpr       go to state 28
    unary_op        go to state 29
    PrimaryExpr     go to state 30
    Operand         go to state 31
    Literal         go to state 51
    IndexExpr       go to state 33
    ConversionExpr  go to state 34
    Condition       go to state 103


State 57

    0 $accept: Program $end .

    $default  accept


State 58

   57 DeclarationStmt: Type IDENT . SEMICOLON
   58                | Type IDENT . ASSIGN Expression SEMICOLON
   59                | Type IDENT . LBRACK Expression RBRACK SEMICOLON

    ASSIGN     shift, and go to state 104
    LBRACK     shift, and go to state 105
    SEMICOLON  shift, and go to state 106


State 59

   70 IncDecExpr: Expression INC .

    $default  reduce using rule 70 (IncDecExpr)


State 60

   71 IncDecExpr: Expression DEC .

    $default  reduce using rule 71 (IncDecExpr)


State 61

   63 assign_op: ASSIGN .

    $default  reduce using rule 63 (assign_op)


State 62

   64 assign_op: ADD_ASSIGN .

    $default  reduce using rule 64 (assign_op)


State 63

   65 assign_op: SUB_ASSIGN .

    $default  reduce using rule 65 (assign_op)


State 64

   66 assign_op: MUL_ASSIGN .

    $default  reduce using rule 66 (assign_op)


State 65

   67 assign_op: QUO_ASSIGN .

    $default  reduce using rule 67 (assign_op)


State 66

   68 assign_op: REM_ASSIGN .

    $default  reduce using rule 68 (assign_op)


State 67

    7 Expression: Expression OR . Expr7

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 19

    Expr7           go to state 107
    Expr6           go to state 25
    Expr5           go to state 26
    Expr4           go to state 27
    UnaryExpr       go to state 28
    unary_op        go to state 29
    PrimaryExpr     go to state 30
    Operand         go to state 31
    Literal         go to state 51
    IndexExpr       go to state 33
    ConversionExpr  go to state 34


State 68

   56 ExpressionStmt: Expression SEMICOLON .

    $default  reduce using rule 56 (ExpressionStmt)


State 69

   62 AssignmentExpr: Expression assign_op . Expression

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 19

    Expression      go to state 108
    Expr7           go to state 24
    Expr6           go to state 25
    Expr5           go to state 26
    Expr4           go to state 27
    UnaryExpr       go to state 28
    unary_op        go to state 29
    PrimaryExpr     go to state 30
    Operand         go to state 31
    Literal         go to state 51
    IndexExpr       go to state 33
    ConversionExpr  go to state 34


State 70

    9 Expr7: Expr7 AND . Expr6

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 19

    Expr6           go to state 109
    Expr5           go to state 26
    Expr4           go to state 27
    UnaryExpr       go to state 28
    unary_op        go to state 29
    PrimaryExpr     go to state 30
    Operand         go to state 31
    Literal         go to state 51
    IndexExpr       go to state 33
    ConversionExpr  go to state 34


State 71

   23 cmp_op: GTR .

    $default  reduce using rule 23 (cmp_op)


State 72

   21 cmp_op: LSS .

    $default  reduce using rule 21 (cmp_op)


State 73

   24 cmp_op: GEQ .

    $default  reduce using rule 24 (cmp_op)


State 74

   22 cmp_op: LEQ .

    $default  reduce using rule 22 (cmp_op)


State 75

   19 cmp_op: EQL .

    $default  reduce using rule 19 (cmp_op)


State 76

   20 cmp_op: NEQ .

    $default  reduce using rule 20 (cmp_op)


State 77

   11 Expr6: Expr6 cmp_op . Expr5

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 19

    Expr5           go to state 110
    Expr4           go to state 27
    UnaryExpr       go to state 28
    unary_op        go to state 29
    PrimaryExpr     go to state 30
    Operand         go to state 31
    Literal         go to state 51
    IndexExpr       go to state 33
    ConversionExpr  go to state 34


State 78

   25 add_op: ADD .

    $default  reduce using rule 25 (add_op)


State 79

   26 add_op: SUB .

    $default  reduce using rule 26 (add_op)


State 80

   13 Expr5: Expr5 add_op . Expr4

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 19

    Expr4           go to state 111
    UnaryExpr       go to state 28
    unary_op        go to state 29
    PrimaryExpr     go to state 30
    Operand         go to state 31
    Literal         go to state 51
    IndexExpr       go to state 33
    ConversionExpr  go to state 34


State 81

   27 mul_op: MUL .

    $default  reduce using rule 27 (mul_op)


State 82

   28 mul_op: QUO .

    $default  reduce using rule 28 (mul_op)


State 83

   29 mul_op: REM .

    $default  reduce using rule 29 (mul_op)


State 84

   15 Expr4: Expr4 mul_op . UnaryExpr

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 19

    UnaryExpr       go to state 112
    unary_op        go to state 29
    PrimaryExpr     go to state 30
    Operand         go to state 31
    Literal         go to state 51
    IndexExpr       go to state 33
    ConversionExpr  go to state 34


State 85

   18 UnaryExpr: unary_op UnaryExpr .

    $default  reduce using rule 18 (UnaryExpr)


State 86

   44 IndexExpr: PrimaryExpr LBRACK . Expression RBRACK

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 19

    Expression      go to state 113
    Expr7           go to state 24
    Expr6           go to state 25
    Expr5           go to state 26
    Expr4           go to state 27
    UnaryExpr       go to state 28
    unary_op        go to state 29
    PrimaryExpr     go to state 30
    Operand         go to state 31
    Literal         go to state 51
    IndexExpr       go to state 33
    ConversionExpr  go to state 34


State 87

   61 AssignmentExpr: Literal assign_op . Expression

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 19

    Expression      go to state 114
    Expr7           go to state 24
    Expr6           go to state 25
    Expr5           go to state 26
    Expr4           go to state 27
    UnaryExpr       go to state 28
    unary_op        go to state 29
    PrimaryExpr     go to state 30
    Operand         go to state 31
    Literal         go to state 51
    IndexExpr       go to state 33
    ConversionExpr  go to state 34


State 88

   46 Statement: Statement . Statement
   46          | Statement Statement .

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACE      shift, and go to state 5
    PRINT       shift, and go to state 6
    IF          shift, and go to state 7
    FOR         shift, and go to state 8
    WHILE       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    BOOL        shift, and go to state 12
    STRING      shift, and go to state 13
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 19

    ADD         [reduce using rule 46 (Statement)]
    SUB         [reduce using rule 46 (Statement)]
    NOT         [reduce using rule 46 (Statement)]
    LPAREN      [reduce using rule 46 (Statement)]
    LBRACE      [reduce using rule 46 (Statement)]
    PRINT       [reduce using rule 46 (Statement)]
    IF          [reduce using rule 46 (Statement)]
    FOR         [reduce using rule 46 (Statement)]
    WHILE       [reduce using rule 46 (Statement)]
    INT         [reduce using rule 46 (Statement)]
    FLOAT       [reduce using rule 46 (Statement)]
    BOOL        [reduce using rule 46 (Statement)]
    STRING      [reduce using rule 46 (Statement)]
    TRUE        [reduce using rule 46 (Statement)]
    FALSE       [reduce using rule 46 (Statement)]
    INT_LIT     [reduce using rule 46 (Statement)]
    FLOAT_LIT   [reduce using rule 46 (Statement)]
    STRING_LIT  [reduce using rule 46 (Statement)]
    IDENT       [reduce using rule 46 (Statement)]
    $default    reduce using rule 46 (Statement)

    Type             go to state 21
    TypeName         go to state 22
    Expression       go to state 23
    Expr7            go to state 24
    Expr6            go to state 25
    Expr5            go to state 26
    Expr4            go to state 27
    UnaryExpr        go to state 28
    unary_op         go to state 29
    PrimaryExpr      go to state 30
    Operand          go to state 31
    Literal          go to state 32
    IndexExpr        go to state 33
    ConversionExpr   go to state 34
    Statement        go to state 88
    ExpressionStmt   go to state 36
    DeclarationStmt  go to state 37
    AssignmentStmt   go to state 38
    AssignmentExpr   go to state 39
    IncDecStmt       go to state 40
    IncDecExpr       go to state 41
    Block            go to state 42
    Lbrace           go to state 43
    IfStmt           go to state 45
    WhileStmt        go to state 46
    ForStmt          go to state 47
    PrintStmt        go to state 48


State 89

   60 AssignmentStmt: AssignmentExpr SEMICOLON .

    $default  reduce using rule 60 (AssignmentStmt)


State 90

   69 IncDecStmt: IncDecExpr SEMICOLON .

    $default  reduce using rule 69 (IncDecStmt)


State 91

   72 Block: Lbrace StatementList . Rbrace

    RBRACE  shift, and go to state 115

    Rbrace  go to state 116


State 92

   45 ConversionExpr: LPAREN Type RPAREN . Expression

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 19

    Expression      go to state 117
    Expr7           go to state 24
    Expr6           go to state 25
    Expr5           go to state 26
    Expr4           go to state 27
    UnaryExpr       go to state 28
    unary_op        go to state 29
    PrimaryExpr     go to state 30
    Operand         go to state 31
    Literal         go to state 51
    IndexExpr       go to state 33
    ConversionExpr  go to state 34


State 93

   38 Operand: LPAREN Expression RPAREN .

    $default  reduce using rule 38 (Operand)


State 94

   37 Operand: IDENT .
   88 PrintStmt: PRINT LPAREN IDENT . RPAREN SEMICOLON
   89          | PRINT LPAREN IDENT . LBRACK INT_LIT RBRACK RPAREN SEMICOLON

    RPAREN  shift, and go to state 118
    LBRACK  shift, and go to state 119

    RPAREN    [reduce using rule 37 (Operand)]
    LBRACK    [reduce using rule 37 (Operand)]
    $default  reduce using rule 37 (Operand)


State 95

    7 Expression: Expression . OR Expr7
   90 PrintStmt: PRINT LPAREN Expression . RPAREN SEMICOLON

    OR      shift, and go to state 67
    RPAREN  shift, and go to state 120


State 96

   76 IfStmt: IF Condition Block .
   77       | IF Condition Block . ELSE IfStmt
   78       | IF Condition Block . ELSE Block

    ELSE  shift, and go to state 121

    $default  reduce using rule 76 (IfStmt)


State 97

    7 Expression: Expression . OR Expr7
   62 AssignmentExpr: Expression . assign_op Expression
   70 IncDecExpr: Expression . INC
   71           | Expression . DEC
   86 SimpleExpr: Expression .

    INC         shift, and go to state 59
    DEC         shift, and go to state 60
    ASSIGN      shift, and go to state 61
    ADD_ASSIGN  shift, and go to state 62
    SUB_ASSIGN  shift, and go to state 63
    MUL_ASSIGN  shift, and go to state 64
    QUO_ASSIGN  shift, and go to state 65
    REM_ASSIGN  shift, and go to state 66
    OR          shift, and go to state 67

    $default  reduce using rule 86 (SimpleExpr)

    assign_op  go to state 69


State 98

   85 SimpleExpr: AssignmentExpr .

    $default  reduce using rule 85 (SimpleExpr)


State 99

   87 SimpleExpr: IncDecExpr .

    $default  reduce using rule 87 (SimpleExpr)


State 100

   81 ForStmt: FOR LPAREN ForClause . RPAREN Block

    RPAREN  shift, and go to state 122


State 101

   82 ForClause: InitStmt . SEMICOLON Condition SEMICOLON PostStmt

    SEMICOLON  shift, and go to state 123


State 102

   83 InitStmt: SimpleExpr .

    $default  reduce using rule 83 (InitStmt)


State 103

   80 WhileStmt: WHILE LPAREN Condition . RPAREN Block

    RPAREN  shift, and go to state 124


State 104

   58 DeclarationStmt: Type IDENT ASSIGN . Expression SEMICOLON

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 19

    Expression      go to state 125
    Expr7           go to state 24
    Expr6           go to state 25
    Expr5           go to state 26
    Expr4           go to state 27
    UnaryExpr       go to state 28
    unary_op        go to state 29
    PrimaryExpr     go to state 30
    Operand         go to state 31
    Literal         go to state 51
    IndexExpr       go to state 33
    ConversionExpr  go to state 34


State 105

   59 DeclarationStmt: Type IDENT LBRACK . Expression RBRACK SEMICOLON

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 19

    Expression      go to state 126
    Expr7           go to state 24
    Expr6           go to state 25
    Expr5           go to state 26
    Expr4           go to state 27
    UnaryExpr       go to state 28
    unary_op        go to state 29
    PrimaryExpr     go to state 30
    Operand         go to state 31
    Literal         go to state 51
    IndexExpr       go to state 33
    ConversionExpr  go to state 34


State 106

   57 DeclarationStmt: Type IDENT SEMICOLON .

    $default  reduce using rule 57 (DeclarationStmt)


State 107

    7 Expression: Expression OR Expr7 .
    9 Expr7: Expr7 . AND Expr6

    AND  shift, and go to state 70

    AND       [reduce using rule 7 (Expression)]
    $default  reduce using rule 7 (Expression)


State 108

    7 Expression: Expression . OR Expr7
   62 AssignmentExpr: Expression assign_op Expression .

    OR  shift, and go to state 67

    $default  reduce using rule 62 (AssignmentExpr)


State 109

    9 Expr7: Expr7 AND Expr6 .
   11 Expr6: Expr6 . cmp_op Expr5

    GTR  shift, and go to state 71
    LSS  shift, and go to state 72
    GEQ  shift, and go to state 73
    LEQ  shift, and go to state 74
    EQL  shift, and go to state 75
    NEQ  shift, and go to state 76

    GTR       [reduce using rule 9 (Expr7)]
    LSS       [reduce using rule 9 (Expr7)]
    GEQ       [reduce using rule 9 (Expr7)]
    LEQ       [reduce using rule 9 (Expr7)]
    EQL       [reduce using rule 9 (Expr7)]
    NEQ       [reduce using rule 9 (Expr7)]
    $default  reduce using rule 9 (Expr7)

    cmp_op  go to state 77


State 110

   11 Expr6: Expr6 cmp_op Expr5 .
   13 Expr5: Expr5 . add_op Expr4

    ADD  shift, and go to state 78
    SUB  shift, and go to state 79

    ADD       [reduce using rule 11 (Expr6)]
    SUB       [reduce using rule 11 (Expr6)]
    $default  reduce using rule 11 (Expr6)

    add_op  go to state 80


State 111

   13 Expr5: Expr5 add_op Expr4 .
   15 Expr4: Expr4 . mul_op UnaryExpr

    MUL  shift, and go to state 81
    QUO  shift, and go to state 82
    REM  shift, and go to state 83

    MUL       [reduce using rule 13 (Expr5)]
    QUO       [reduce using rule 13 (Expr5)]
    REM       [reduce using rule 13 (Expr5)]
    $default  reduce using rule 13 (Expr5)

    mul_op  go to state 84


State 112

   15 Expr4: Expr4 mul_op UnaryExpr .

    $default  reduce using rule 15 (Expr4)


State 113

    7 Expression: Expression . OR Expr7
   44 IndexExpr: PrimaryExpr LBRACK Expression . RBRACK

    OR      shift, and go to state 67
    RBRACK  shift, and go to state 127


State 114

    7 Expression: Expression . OR Expr7
   61 AssignmentExpr: Literal assign_op Expression .

    OR  shift, and go to state 67

    $default  reduce using rule 61 (AssignmentExpr)


State 115

   74 Rbrace: RBRACE .

    $default  reduce using rule 74 (Rbrace)


State 116

   72 Block: Lbrace StatementList Rbrace .

    $default  reduce using rule 72 (Block)


State 117

    7 Expression: Expression . OR Expr7
   45 ConversionExpr: LPAREN Type RPAREN Expression .

    OR  shift, and go to state 67

    OR        [reduce using rule 45 (ConversionExpr)]
    $default  reduce using rule 45 (ConversionExpr)


State 118

   88 PrintStmt: PRINT LPAREN IDENT RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 128


State 119

   89 PrintStmt: PRINT LPAREN IDENT LBRACK . INT_LIT RBRACK RPAREN SEMICOLON

    INT_LIT  shift, and go to state 129


State 120

   90 PrintStmt: PRINT LPAREN Expression RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 130


State 121

   77 IfStmt: IF Condition Block ELSE . IfStmt
   78       | IF Condition Block ELSE . Block

    LBRACE  shift, and go to state 5
    IF      shift, and go to state 7

    Block   go to state 131
    Lbrace  go to state 43
    IfStmt  go to state 132


State 122

   81 ForStmt: FOR LPAREN ForClause RPAREN . Block

    LBRACE  shift, and go to state 5

    Block   go to state 133
    Lbrace  go to state 43


State 123

   82 ForClause: InitStmt SEMICOLON . Condition SEMICOLON PostStmt

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 19

    Expression      go to state 53
    Expr7           go to state 24
    Expr6           go to state 25
    Expr5           go to state 26
    Expr4           go to state 27
    UnaryExpr       go to state 28
    unary_op        go to state 29
    PrimaryExpr     go to state 30
    Operand         go to state 31
    Literal         go to state 51
    IndexExpr       go to state 33
    ConversionExpr  go to state 34
    Condition       go to state 134


State 124

   80 WhileStmt: WHILE LPAREN Condition RPAREN . Block

    LBRACE  shift, and go to state 5

    Block   go to state 135
    Lbrace  go to state 43


State 125

    7 Expression: Expression . OR Expr7
   58 DeclarationStmt: Type IDENT ASSIGN Expression . SEMICOLON

    OR         shift, and go to state 67
    SEMICOLON  shift, and go to state 136


State 126

    7 Expression: Expression . OR Expr7
   59 DeclarationStmt: Type IDENT LBRACK Expression . RBRACK SEMICOLON

    OR      shift, and go to state 67
    RBRACK  shift, and go to state 137


State 127

   44 IndexExpr: PrimaryExpr LBRACK Expression RBRACK .

    $default  reduce using rule 44 (IndexExpr)


State 128

   88 PrintStmt: PRINT LPAREN IDENT RPAREN SEMICOLON .

    $default  reduce using rule 88 (PrintStmt)


State 129

   89 PrintStmt: PRINT LPAREN IDENT LBRACK INT_LIT . RBRACK RPAREN SEMICOLON

    RBRACK  shift, and go to state 138


State 130

   90 PrintStmt: PRINT LPAREN Expression RPAREN SEMICOLON .

    $default  reduce using rule 90 (PrintStmt)


State 131

   78 IfStmt: IF Condition Block ELSE Block .

    $default  reduce using rule 78 (IfStmt)


State 132

   77 IfStmt: IF Condition Block ELSE IfStmt .

    $default  reduce using rule 77 (IfStmt)


State 133

   81 ForStmt: FOR LPAREN ForClause RPAREN Block .

    $default  reduce using rule 81 (ForStmt)


State 134

   82 ForClause: InitStmt SEMICOLON Condition . SEMICOLON PostStmt

    SEMICOLON  shift, and go to state 139


State 135

   80 WhileStmt: WHILE LPAREN Condition RPAREN Block .

    $default  reduce using rule 80 (WhileStmt)


State 136

   58 DeclarationStmt: Type IDENT ASSIGN Expression SEMICOLON .

    $default  reduce using rule 58 (DeclarationStmt)


State 137

   59 DeclarationStmt: Type IDENT LBRACK Expression RBRACK . SEMICOLON

    SEMICOLON  shift, and go to state 140


State 138

   89 PrintStmt: PRINT LPAREN IDENT LBRACK INT_LIT RBRACK . RPAREN SEMICOLON

    RPAREN  shift, and go to state 141


State 139

   82 ForClause: InitStmt SEMICOLON Condition SEMICOLON . PostStmt

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    TRUE        shift, and go to state 14
    FALSE       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    FLOAT_LIT   shift, and go to state 17
    STRING_LIT  shift, and go to state 18
    IDENT       shift, and go to state 19

    Expression      go to state 97
    Expr7           go to state 24
    Expr6           go to state 25
    Expr5           go to state 26
    Expr4           go to state 27
    UnaryExpr       go to state 28
    unary_op        go to state 29
    PrimaryExpr     go to state 30
    Operand         go to state 31
    Literal         go to state 32
    IndexExpr       go to state 33
    ConversionExpr  go to state 34
    AssignmentExpr  go to state 98
    IncDecExpr      go to state 99
    PostStmt        go to state 142
    SimpleExpr      go to state 143


State 140

   59 DeclarationStmt: Type IDENT LBRACK Expression RBRACK SEMICOLON .

    $default  reduce using rule 59 (DeclarationStmt)


State 141

   89 PrintStmt: PRINT LPAREN IDENT LBRACK INT_LIT RBRACK RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 144


State 142

   82 ForClause: InitStmt SEMICOLON Condition SEMICOLON PostStmt .

    $default  reduce using rule 82 (ForClause)


State 143

   84 PostStmt: SimpleExpr .

    $default  reduce using rule 84 (PostStmt)


State 144

   89 PrintStmt: PRINT LPAREN IDENT LBRACK INT_LIT RBRACK RPAREN SEMICOLON .

    $default  reduce using rule 89 (PrintStmt)
